[{"/home/ode/Projects/resumenator/src/index.tsx":"1","/home/ode/Projects/resumenator/src/reportWebVitals.ts":"2","/home/ode/Projects/resumenator/src/App.tsx":"3","/home/ode/Projects/resumenator/src/components/CV.tsx":"4","/home/ode/Projects/resumenator/src/components/CVform.tsx":"5","/home/ode/Projects/resumenator/src/components/utils/dataStructure.ts":"6","/home/ode/Projects/resumenator/src/components/CVrender.tsx":"7"},{"size":500,"mtime":1610991277524,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1610991277524,"results":"10","hashOfConfig":"9"},{"size":562,"mtime":1611332762506,"results":"11","hashOfConfig":"9"},{"size":7493,"mtime":1611476670754,"results":"12","hashOfConfig":"9"},{"size":15647,"mtime":1611330777150,"results":"13","hashOfConfig":"9"},{"size":3770,"mtime":1611244531587,"results":"14","hashOfConfig":"9"},{"size":465,"mtime":1611410787987,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1anlkfz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/ode/Projects/resumenator/src/index.tsx",[],["34","35"],"/home/ode/Projects/resumenator/src/reportWebVitals.ts",[],"/home/ode/Projects/resumenator/src/App.tsx",["36","37","38"],"import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { PDFViewer } from '@react-pdf/renderer';\nimport CV from './components/CV';\nimport CVform from './components/CVform';\nimport CVrenderer from './components/CVrender';\n\nexport default () => {\n  return (\n    <div className=\"App\">\n     <Router>\n        <Switch>\n          <Route exact path=\"/\" component={CVform} />\n          <Route exact path=\"/cv\" component={CVrenderer} />\n        </Switch>\n     </Router>\n      \n     \n    </div>\n  );\n}","/home/ode/Projects/resumenator/src/components/CV.tsx",["39","40","41","42","43","44","45"],"/home/ode/Projects/resumenator/src/components/CVform.tsx",["46","47"],"import {Â useForm } from \"react-hook-form\";\nimport {useState} from \"react\";\nimport dataStructure from './utils/dataStructure';\nimport \"./cv-form.css\";\nimport unformattedData from './utils/interfaces/unformattedData';\nimport {Link} from 'react-router-dom';\n\nexport default (props:any) => {\n    const [cvData, setCvData] = useState({});\n    const {register, handleSubmit, errors} = useForm();\n\n    const onSubmit = (data:unformattedData) => {\n        setCvData(dataStructure(data));\n    }\n\n    return (\n        <>\n        <div className=\"cv-header\">\n            <h1>Resumenator - Easy-to-use resume generator</h1>\n        </div>\n\n        <div className=\"cv-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"basic-info form-data\">\n            <h2>Basic information</h2>\n            <h3>Name</h3>\n                <input type=\"text\" placeholder=\"John Doe\" \n                name=\"name\" ref={register({required: \"Name required\"})} />\n                {errors.title && <p>{errors.name.message}</p>}\n\n                <h3>Date of birth</h3>\n                <input type=\"text\" placeholder=\"1.1.1900\" name=\"dateofbirth\" \n                ref={register({required: \"Date of birth required\"})} />\n                {errors.dateofbirth && <p>{errors.dateofbirth.message}</p>}\n\n                <h3>Address</h3>\n                <input type=\"text\" placeholder=\"example street 33\" name=\"address\"\n                ref={register({required: \"Address required\"})} />\n                {errors.address && <p>{errors.address.message}</p>}\n\n                <h3>City</h3>\n                <input type=\"text\" placeholder=\"Washington DC\" name=\"city\"\n                ref={register({required: \"City required\"})} />\n                {errors.city && <p>{errors.city.message}</p>}\n\n                <h3>Postal code</h3>\n                <input type=\"text\" placeholder=\"00010\" name=\"postcode\"\n                ref={register({required: \"Postal code required\"})} />\n                {errors.postcode && <p>{errors.postcode.message}</p>} \n\n                <h3>Telephone</h3>\n                <input type=\"text\" placeholder=\"00 123 4657\" name=\"telephone\"\n                ref={register({required: \"Telephone required\"})} />\n                {errors.telephone && <p>{errors.telephone.message}</p>}\n\n                <h3>Email</h3>\n                <input type=\"text\" placeholder=\"john.doe@examplemail.com\" name=\"email\"\n                ref={register({required: \"Email required\"})} />\n                {errors.email && <p>{errors.email.message}</p>}\n\n                <h3>Make sure every field is filled!</h3>\n                <button onClick={() => {\n                    const basicInfo = document.getElementsByClassName(\"basic-info\") as HTMLCollectionOf<HTMLElement>;\n                    const profile = document.getElementsByClassName(\"profile\") as HTMLCollectionOf<HTMLElement>;\n                    basicInfo[0].style.display = \"none\";\n                    profile[0].style.display = \"flex\";\n                    window.scroll(0, 0);\n                }} >Next</button>\n            </div>\n\n\n\n            <div className=\"profile form-data\">\n                Write a short description of yourself\n                <textarea name=\"description\" id=\"profile-Description\"\n                rows={25} placeholder=\"My name is John Doe and I like strawberries\"\n                ref={register({required: \"Description is required\"})} />\n                <h3>Make sure every field is filled!</h3>\n                 <button onClick={() => {\n                    const workingExperience = document.getElementsByClassName(\"working-experience\") as HTMLCollectionOf<HTMLElement>;\n                    const profile = document.getElementsByClassName(\"profile\") as HTMLCollectionOf<HTMLElement>;\n                    profile[0].style.display = \"none\";\n                    workingExperience[0].style.display = \"flex\";\n                    window.scroll(0, 0);\n                }} >Next</button>\n            </div>\n                \n\n            <div className=\"working-experience form-data\">\n\n                <h2>Working experience</h2>\n                {\n                    [0, 1, 2, 3, 4].map(i => {\n                        if (i === 0) {\n                            return (\n                                <div className=\"work\" key={i}>\n                                    <h3>Company</h3>\n                                    <input type=\"text\" name={\"company\" + i.toString()} placeholder=\"Example company Inc\"\n                                    ref={register} />\n\n                                    <h3>Role</h3>\n                                    <input type=\"text\" name={\"role\" + i.toString()} placeholder=\"Janitor\" ref={register} />\n\n                                    <h3>What did you do?</h3>\n                                    <textarea rows={6}name={\"workingExperience\" + i.toString()} placeholder=\"I cleaned up places\" ref={register} />\n\n                                    <h3>When did you work there?</h3>\n                                    <input type=\"text\" name={\"workingDate\" + i.toString()} placeholder=\"2014-\" ref={register} />\n                                 </div>\n                            );\n                        } else {\n                            return (\n                                <div className=\"work\" key={i}>\n                                <h3>Company</h3>\n                                <input type=\"text\" name={\"company\" + i.toString()} placeholder=\"\"\n                                ref={register} />\n\n                                <h3>Role</h3>\n                                <input type=\"text\" name={\"role\" + i.toString()} placeholder=\"\" ref={register} />\n\n                                <h3>What did you do?</h3>\n                                <textarea rows={6} name={\"workingExperience\" + i.toString()} placeholder=\"\" ref={register} />\n\n                                <h3>When did you work there?</h3>\n                                <input type=\"text\" name={\"workingDate\" + i.toString()} placeholder=\"\" ref={register} />\n                             </div>\n                            );\n                        }\n                        \n                    })\n                }\n                <button onClick={() => {\n                const education = document.getElementsByClassName(\"education\") as HTMLCollectionOf<HTMLElement>;\n                const workingExperience = document.getElementsByClassName(\"working-experience\") as HTMLCollectionOf<HTMLElement>;\n                workingExperience[0].style.display = \"none\";\n                education[0].style.display = \"flex\";\n                window.scroll(0, 0);\n                }}>Next</button>\n            </div>\n\n\n            <div className=\"education form-data\">\n                <h2>Education</h2>\n                {\n                    [0, 1, 2, 3].map(i => {\n                        if (i !== 0) {\n                        return (\n                            <div className=\"school\" key={i}>\n                                <h3>School</h3>\n\n                                <input type=\"text\" name={\"school\" + i.toString()}\n                                placeholder=\"\" ref={register} />\n\n                                <h3>Degree</h3>\n                                <input type=\"text\" name={\"degree\" + i.toString()}\n                                placeholder=\"\" ref={register} />\n\n                                <h3>What did you study?</h3>\n                                <textarea rows={6} name={\"orientation\" + i.toString()}\n                                placeholder=\"\" ref={register} />\n\n                                <h3>When did you study there?</h3>\n                                <input type=\"text\" name={\"studyDate\" + i.toString()}\n                                ref={register} />\n                            </div>\n                        );\n                        } else {\n                            return (\n                                <div className=\"school\" key={i}>\n                                <h3>School</h3>\n\n                                <input type=\"text\" name={\"school\" + i.toString()}\n                                placeholder=\"Harvard University\" ref={register} />\n\n                                <h3>Degree</h3>\n                                <input type=\"text\" name={\"degree\" + i.toString()}\n                                placeholder=\"doctor\" ref={register} />\n\n                                <h3>What did you study?</h3>\n                                <textarea rows={6} name={\"orientation\" + i.toString()}\n                                placeholder=\"I studied biology\" ref={register} />\n\n                                <h3>When did you study there?</h3>\n                                <input type=\"text\" name={\"studyDate\" + i.toString()}\n                                placeholder=\"1999-2007\" ref={register} />\n                                </div>\n                            );\n                            \n                        }\n                    })\n                }\n                <button onClick={() => {\n                const languages = document.getElementsByClassName(\"languages\") as HTMLCollectionOf<HTMLElement>;\n                const education = document.getElementsByClassName(\"education\") as HTMLCollectionOf<HTMLElement>;\n                education[0].style.display = \"none\";\n                languages[0].style.display = \"flex\";\n                window.scroll(0, 0);\n                }}>Next</button>\n            </div>\n\n            <div className=\"languages form-data\">\n                <h2>Language knowledge</h2>\n                {\n                    [0, 1, 2, 3].map(i => {\n                        if (i !== 0 && i !== 1) {\n                            return (\n                                <div className=\"language\" key={i}>\n                                    <h3>Language</h3>\n                                    <input type=\"text\" name={\"language\" + i.toString()}\n                                    ref={register} />\n\n                                    <h3>Skill level</h3>\n                                    <input type=\"text\" name={\"languageSkill\" + i.toString()}\n                                    ref={register} />\n                                </div>\n                            );\n                        } else if (i === 0) {\n                            return (\n                                <div className=\"language\" key={i} >\n                                    <h3>Language</h3>\n                                    <input type=\"text\" name={\"language\" + i.toString()}\n                                    placeholder=\"English\" ref={register} />\n\n                                    <h3>Skill level</h3>\n                                    <input type=\"text\" name={\"languageSkill\" + i.toString()}\n                                    placeholder=\"mother tongue\" ref={register} />\n                                </div>\n                            );\n                        } else {\n                            return (\n                                <div className=\"language\" key={i}>\n                                    <h3>Language</h3>\n                                    <input type=\"text\" name={\"language\" + i.toString()}\n                                    placeholder=\"Finnish\" ref={register} />\n\n                                    <h3>Skill level</h3>\n                                    <input type=\"text\" name={\"languageSkill\" + i.toString()}\n                                    placeholder=\"excellent\" ref={register} />\n                                </div>\n                            );\n                        }\n                    })\n                }\n            <button onClick={() => {\n                const courses = document.getElementsByClassName(\"courses\") as HTMLCollectionOf<HTMLElement>;\n                const languages = document.getElementsByClassName(\"languages\") as HTMLCollectionOf<HTMLElement>;\n                languages[0].style.display = \"none\";\n                courses[0].style.display = \"flex\";\n                window.scroll(0, 0);\n                }}>Next</button>\n            </div>\n            <div className=\"courses form-data\">\n                <h2>Certifications</h2>\n                {\n                [0, 1, 2, 3, 4].map(i => {\n                    if (i !== 0) {\n                        return (\n                            <div className=\"course\" key={i}>\n                                <h3>Course</h3>\n                                <input type=\"text\" name={\"course\" + i.toString()}\n                                ref={register} />\n\n                                <h3>Graduate date</h3>\n                                <input type=\"text\" name={\"courseDate\" + i.toString()}\n                                ref={register} />\n                            </div>\n                        );\n                    } else {\n                        <div className=\"course\" key={i}>\n                                <h3>Certification</h3>\n                                <input type=\"text\" name={\"course\" + i.toString()}\n                                placeholder=\"hygiene proficiency certification\" ref={register} />\n\n                                <h3>Graduate date</h3>\n                                <input type=\"text\" name={\"courseDate\" + i.toString()}\n                                placeholder=\"4.4.1999\" ref={register} />\n                            </div>\n                    }\n                })\n                }\n            <button onClick={() => {\n                const references = document.getElementsByClassName(\"references\") as HTMLCollectionOf<HTMLElement>;\n                const courses = document.getElementsByClassName(\"courses\") as HTMLCollectionOf<HTMLElement>;\n                courses[0].style.display = \"none\";\n                references[0].style.display = \"flex\";\n                window.scroll(0, 0);\n                }}>Next</button>\n            </div>\n\n\n            <div className=\"references form-data\">\n                <h2>References</h2>\n                {\n                    [0, 1, 2, 3].map(i => {\n                        if (i !== 0) {\n                            return (\n                                <div className=\"reference\" key={i}>\n                                    <h3>Reference</h3>\n                                    <input type=\"text\" name={\"reference\" + i.toString()}\n                                    ref={register} />\n\n                                    <h3>Contact details</h3>\n                                    <input type=\"text\" name={\"referenceContact\" + i.toString()}\n                                    ref={register} />\n                                </div>\n                            );\n                        } else {\n                            return (\n                                <div className=\"reference\" key={i}>\n                                    <h3>Reference</h3>\n                                    <input type=\"text\" name={\"reference\" + i.toString()}\n                                    placeholder=\"John Doe sr.\" ref={register} />\n\n                                    <h3>Contact details</h3>\n                                    <input type=\"text\" name={\"referenceContact\" + i.toString()}\n                                    placeholder=\"Phone: 01 234 2132, email: john.doe@inc.com\" ref={register} />\n                                </div>\n                            );\n                        }\n                    })\n                }\n                \n                <Link to={{pathname: \"/cv\", cvData:cvData }}><button type=\"submit\">LÃ¤hetÃ¤</button></Link>\n            </div>\n                \n            </form>\n        </div>\n    </>\n    );\n}","/home/ode/Projects/resumenator/src/components/utils/dataStructure.ts",[],"/home/ode/Projects/resumenator/src/components/CVrender.tsx",["48"],"import { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\nimport CV from './CV';\nimport './pdf-renderer.css'\n\nexport default (props:any) => (\n    <div className=\"pdf-renderer\">\n    <PDFDownloadLink document={<CV />} fileName=\"resume.pdf\">\n    {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download resume here')}\n    </PDFDownloadLink>\n    <PDFViewer>\n        <CV cvData={props.location.cvData} />\n    </PDFViewer>  \n    </div>  \n)",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":19},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":10},{"ruleId":"58","severity":1,"message":"59","line":9,"column":1,"nodeType":"60","endLine":22,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":1,"column":50,"nodeType":"55","messageId":"56","endLine":1,"endColumn":59},{"ruleId":"53","severity":1,"message":"61","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":38},{"ruleId":"53","severity":1,"message":"62","line":3,"column":40,"nodeType":"55","messageId":"56","endLine":3,"endColumn":71},{"ruleId":"58","severity":1,"message":"59","line":183,"column":3,"nodeType":"60","endLine":259,"endColumn":4},{"ruleId":"53","severity":1,"message":"63","line":184,"column":20,"nodeType":"55","messageId":"56","endLine":184,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":209,"column":65,"nodeType":"66","messageId":"67","endLine":209,"endColumn":67},{"ruleId":"64","severity":1,"message":"65","line":234,"column":67,"nodeType":"66","messageId":"67","endLine":234,"endColumn":69},{"ruleId":"58","severity":1,"message":"59","line":8,"column":1,"nodeType":"60","endLine":331,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":256,"column":39,"nodeType":"66","messageId":"67","endLine":256,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":5,"column":1,"nodeType":"60","endLine":14,"endColumn":2},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'PDFViewer' is defined but never used.","Identifier","unusedVar","'CV' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setSyntheticTrailingComments' is defined but never used.","'skipPartiallyEmittedExpressions' is defined but never used.","'setCvData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]